{"version":3,"file":"chips.min.js","sources":["../../components/base/apply-passive.js","../../components/base/custom-link.js","../../components/base/custom-event.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/chips/chip/constants.js","../../node_modules/@material/chips/chip/adapter.js","../../node_modules/@material/chips/chip/foundation.js","../../node_modules/@material/ripple/constants.js","../../node_modules/@material/ripple/adapter.js","../../node_modules/@material/ripple/util.js","../../node_modules/@material/ripple/foundation.js","../../components/base/base-plugin.js","../../components/ripple/mdc-ripple-base.js","../../components/chips/mdc-chip.vue","../../node_modules/@material/chips/chip-set/constants.js","../../node_modules/@material/chips/chip-set/adapter.js","../../node_modules/@material/chips/chip-set/foundation.js","../../components/chips/mdc-chip-set.vue","../../components/base/auto-init.js","../../components/chips/entry.js"],"sourcesContent":["let supportsPassive_\n\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nexport function applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false\n    try {\n      globalObj.document.addEventListener('test', null, {\n        get passive() {\n          isSupported = { passive: true }\n        }\n      })\n    } catch (e) {\n      //empty\n    }\n\n    supportsPassive_ = isSupported\n  }\n\n  return supportsPassive_\n}\n","export const CustomLink = {\n  name: 'custom-link',\n  functional: true,\n  props: {\n    tag: { type: String, default: 'a' },\n    link: Object\n  },\n  render(h, context) {\n    let element\n    let data = Object.assign({}, context.data)\n\n    if (context.props.link && context.parent.$router) {\n      // router-link case\n      element = context.parent.$root.$options.components['router-link']\n      data.props = Object.assign({ tag: context.props.tag }, context.props.link)\n      if (data.on.click) {\n        data.nativeOn = { click: data.on.click }\n      }\n    } else {\n      // element fallback\n      element = context.props.tag\n    }\n\n    return h(element, data, context.children)\n  }\n}\n\nexport const CustomLinkMixin = {\n  props: {\n    to: [String, Object],\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String\n  },\n  computed: {\n    link() {\n      return (\n        this.to && {\n          to: this.to,\n          exact: this.exact,\n          append: this.append,\n          replace: this.replace,\n          activeClass: this.activeClass,\n          exactActiveClass: this.exactActiveClass\n        }\n      )\n    }\n  },\n  components: {\n    CustomLink\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ENTRY_ANIMATION_NAME: 'mdc-chip-entry',\n  INTERACTION_EVENT: 'MDCChip:interaction',\n  TRAILING_ICON_INTERACTION_EVENT: 'MDCChip:trailingIconInteraction',\n  REMOVAL_EVENT: 'MDCChip:removal',\n  CHECKMARK_SELECTOR: '.mdc-chip__checkmark',\n  LEADING_ICON_SELECTOR: '.mdc-chip__icon--leading',\n  TRAILING_ICON_SELECTOR: '.mdc-chip__icon--trailing',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  CHECKMARK: 'mdc-chip__checkmark',\n  CHIP: 'mdc-chip',\n  CHIP_EXIT: 'mdc-chip--exit',\n  HIDDEN_LEADING_ICON: 'mdc-chip__icon--leading-hidden',\n  LEADING_ICON: 'mdc-chip__icon--leading',\n  TRAILING_ICON: 'mdc-chip__icon--trailing',\n  SELECTED: 'mdc-chip--selected',\n  TEXT: 'mdc-chip__text',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Chip.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Chip into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCChipAdapter {\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Adds a class to the leading icon element.\n   * @param {string} className\n   */\n  addClassToLeadingIcon(className) {}\n\n  /**\n   * Removes a class from the leading icon element.\n   * @param {string} className\n   */\n  removeClassFromLeadingIcon(className) {}\n\n  /**\n   * Returns true if target has className, false otherwise.\n   * @param {!EventTarget} target\n   * @param {string} className\n   * @return {boolean}\n   */\n  eventTargetHasClass(target, className) {}\n\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n\n  /**\n   * Registers an event listener on the trailing icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerTrailingIconInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the trailing icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterTrailingIconInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom \"MDCChip:interaction\" event denoting the chip has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyInteraction() {}\n\n  /**\n   * Emits a custom \"MDCChip:trailingIconInteraction\" event denoting the trailing icon has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyTrailingIconInteraction() {}\n\n  /**\n   * Emits a custom event \"MDCChip:removal\" denoting the chip will be removed.\n   */\n  notifyRemoval() {}\n\n  /**\n   * Returns the computed property value of the given style property on the root element.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getComputedStyleValue(propertyName) {}\n\n  /**\n   * Sets the property value of the given style property on the root element.\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setStyleProperty(propertyName, value) {}\n}\n\nexport default MDCChipAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipAdapter from './adapter';\nimport {strings, cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCChipAdapter>}\n * @final\n */\nclass MDCChipFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCChipAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      addClassToLeadingIcon: () => {},\n      removeClassFromLeadingIcon: () => {},\n      eventTargetHasClass: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n      registerTrailingIconInteractionHandler: () => {},\n      deregisterTrailingIconInteractionHandler: () => {},\n      notifyInteraction: () => {},\n      notifyTrailingIconInteraction: () => {},\n      notifyRemoval: () => {},\n      getComputedStyleValue: () => {},\n      setStyleProperty: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction_(evt);\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd_(evt);\n    /** @private {function(!Event): undefined} */\n    this.trailingIconInteractionHandler_ = (evt) => this.handleTrailingIconInteraction_(evt);\n  }\n\n  init() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerEventHandler(evtType, this.interactionHandler_);\n    });\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n    ['click', 'keydown', 'touchstart', 'pointerdown', 'mousedown'].forEach((evtType) => {\n      this.adapter_.registerTrailingIconInteractionHandler(evtType, this.trailingIconInteractionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterEventHandler(evtType, this.interactionHandler_);\n    });\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n    ['click', 'keydown', 'touchstart', 'pointerdown', 'mousedown'].forEach((evtType) => {\n      this.adapter_.deregisterTrailingIconInteractionHandler(evtType, this.trailingIconInteractionHandler_);\n    });\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isSelected() {\n    return this.adapter_.hasClass(cssClasses.SELECTED);\n  }\n\n  /**\n   * @param {boolean} selected\n   */\n  setSelected(selected) {\n    if (selected) {\n      this.adapter_.addClass(cssClasses.SELECTED);\n    } else {\n      this.adapter_.removeClass(cssClasses.SELECTED);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   * @param {!Event} evt\n   */\n  handleInteraction_(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyInteraction();\n    }\n  }\n\n  /**\n   * Handles a transition end event on the root element.\n   * @param {!Event} evt\n   */\n  handleTransitionEnd_(evt) {\n    // Handle transition end event on the chip when it is about to be removed.\n    if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.CHIP_EXIT)) {\n      if (evt.propertyName === 'width') {\n        this.adapter_.notifyRemoval();\n      } else if (evt.propertyName === 'opacity') {\n        // See: https://css-tricks.com/using-css-transitions-auto-dimensions/#article-header-id-5\n        const chipWidth = this.adapter_.getComputedStyleValue('width');\n\n        // On the next frame (once we get the computed width), explicitly set the chip's width\n        // to its current pixel width, so we aren't transitioning out of 'auto'.\n        requestAnimationFrame(() => {\n          this.adapter_.setStyleProperty('width', chipWidth);\n\n          // To mitigate jitter, start transitioning padding and margin before width.\n          this.adapter_.setStyleProperty('padding', '0');\n          this.adapter_.setStyleProperty('margin', '0');\n\n          // On the next frame (once width is explicitly set), transition width to 0.\n          requestAnimationFrame(() => {\n            this.adapter_.setStyleProperty('width', '0');\n          });\n        });\n      }\n      return;\n    }\n\n    // Handle a transition end event on the leading icon or checkmark, since the transition end event bubbles.\n    if (evt.propertyName !== 'opacity') {\n      return;\n    }\n    if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.LEADING_ICON) &&\n        this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.addClassToLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n    } else if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.CHECKMARK) &&\n               !this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.removeClassFromLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the trailing icon element. This is used to\n   * prevent the ripple from activating on interaction with the trailing icon.\n   * @param {!Event} evt\n   */\n  handleTrailingIconInteraction_(evt) {\n    evt.stopPropagation();\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyTrailingIconInteraction();\n      this.adapter_.addClass(cssClasses.CHIP_EXIT);\n    }\n  }\n}\n\nexport default MDCChipFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  isSupported_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  init() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.registerRootHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(ROOT);\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.addClass(UNBOUNDED);\n        // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n        this.layoutInternal_();\n      }\n    });\n  }\n\n  destroy() {\n    if (!this.isSupported_()) {\n      return;\n    }\n\n    if (this.activationTimer_) {\n      clearTimeout(this.activationTimer_);\n      this.activationTimer_ = 0;\n      const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n      this.adapter_.removeClass(FG_ACTIVATION);\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(ROOT);\n      this.adapter_.removeClass(UNBOUNDED);\n      this.removeCssVars_();\n    });\n  }\n\n  /** @private */\n  registerRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.registerResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n}\n\nexport default MDCRippleFoundation;\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","import MDCRippleFoundation from '@material/ripple/foundation.js'\nimport {\n  supportsCssVariables,\n  getMatchesProperty,\n  applyPassive\n} from '@material/ripple/util'\n\nexport class RippleBase extends MDCRippleFoundation {\n  static get MATCHES() {\n    /* global HTMLElement */\n    return (\n      RippleBase._matches ||\n      (RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\n    )\n  }\n\n  static isSurfaceActive(ref) {\n    return ref[RippleBase.MATCHES](':active')\n  }\n\n  constructor(vm, options) {\n    super(\n      Object.assign(\n        {\n          browserSupportsCssVars: () => {\n            return supportsCssVariables(window)\n          },\n          isUnbounded: () => {\n            return false\n          },\n          isSurfaceActive: () => {\n            return vm.$el[RippleBase.MATCHES](':active')\n          },\n          isSurfaceDisabled: () => {\n            return vm.disabled\n          },\n          addClass(className) {\n            vm.$set(vm.classes, className, true)\n          },\n          removeClass(className) {\n            vm.$delete(vm.classes, className)\n          },\n          containsEventTarget: target => vm.$el.contains(target),\n          registerInteractionHandler: (evt, handler) => {\n            vm.$el.addEventListener(evt, handler, applyPassive())\n          },\n          deregisterInteractionHandler: (evt, handler) => {\n            vm.$el.removeEventListener(evt, handler, applyPassive())\n          },\n          registerDocumentInteractionHandler: (evtType, handler) =>\n            document.documentElement.addEventListener(\n              evtType,\n              handler,\n              applyPassive()\n            ),\n          deregisterDocumentInteractionHandler: (evtType, handler) =>\n            document.documentElement.removeEventListener(\n              evtType,\n              handler,\n              applyPassive()\n            ),\n          registerResizeHandler: handler => {\n            return window.addEventListener('resize', handler)\n          },\n          deregisterResizeHandler: handler => {\n            return window.removeEventListener('resize', handler)\n          },\n          updateCssVariable: (varName, value) => {\n            vm.$set(vm.styles, varName, value)\n          },\n          computeBoundingRect: () => {\n            return vm.$el.getBoundingClientRect()\n          },\n          getWindowPageOffset: () => {\n            return { x: window.pageXOffset, y: window.pageYOffset }\n          }\n        },\n        options\n      )\n    )\n  }\n}\n\nexport const RippleMixin = {\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  mounted() {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.ripple.destroy()\n  }\n}\n","<template>\n  <div\n    :class=\"classes\"\n    :style=\"styles\"\n    tabindex=\"0\"\n    v-on=\"$listeners\">\n    <i\n      v-if=\"haveleadingIcon\"\n      ref=\"leadingIcon\"\n      :class=\"leadingClasses\"\n      class=\"mdc-chip__icon mdc-chip__icon--leading\"\n    >{{ leadingIcon }}</i>\n    <div\n      v-if=\"isFilter\"\n      class=\"mdc-chip__checkmark\">\n      <svg\n        class=\"mdc-chip__checkmark-svg\"\n        viewBox=\"-2 -3 30 30\">\n        <path\n          class=\"mdc-chip__checkmark-path\"\n          fill=\"none\"\n          stroke=\"black\"\n          d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"/>\n      </svg>\n    </div>\n    <div class=\"mdc-chip__text\">\n      <slot/>\n    </div>\n    <i\n      v-if=\"havetrailingIcon\"\n      ref=\"trailingIcon\"\n      :class=\"trailingClasses\"\n      class=\"mdc-chip__icon mdc-chip__icon--trailing\"\n      tabindex=\"0\"\n      role=\"button\"\n    >{{ trailingIcon }}</i>\n  </div>\n</template>\napplyPassive\n<script>\nimport MDCChipFoundation from '@material/chips/chip/foundation'\nimport { CustomLinkMixin, emitCustomEvent, applyPassive } from '../base'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-chip',\n  mixins: [CustomLinkMixin],\n  props: {\n    leadingIcon: [String],\n    trailingIcon: [String],\n    leadingIconClasses: [Object],\n    trailingIconClasses: [Object]\n  },\n  inject: ['mdcChipSet'],\n  data() {\n    return {\n      classes: {\n        'mdc-chip': true\n      },\n      styles: {}\n    }\n  },\n  computed: {\n    isFilter() {\n      return this.mdcChipSet && this.mdcChipSet.filter\n    },\n    haveleadingIcon() {\n      return !!this.leadingIcon || this.leadingIconClasses\n    },\n    havetrailingIcon() {\n      return !!this.trailingIcon || this.trailingIconClasses\n    },\n    leadingClasses() {\n      return Object.assign(\n        {},\n        {\n          'material-icons': !!this.leadingIcon\n        },\n        this.leadingIconClasses\n      )\n    },\n    trailingClasses() {\n      return Object.assign(\n        {},\n        {\n          'material-icons': !!this.trailingIcon\n        },\n        this.trailingIconClasses\n      )\n    }\n  },\n  mounted() {\n    this.foundation = new MDCChipFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.$el.classList.contains(className),\n      addClassToLeadingIcon: className => {\n        if (this.haveleadingIcon) {\n          this.$refs.leadingIcon.classList.add(className)\n        }\n      },\n      removeClassFromLeadingIcon: className => {\n        if (this.haveleadingIcon) {\n          this.$refs.leadingIcon.classList.remove(className)\n        }\n      },\n      eventTargetHasClass: (target, className) =>\n        target.classList.contains(className),\n      registerEventHandler: (evtType, handler) =>\n        this.$el.addEventListener(evtType, handler),\n      deregisterEventHandler: (evtType, handler) =>\n        this.$el.removeEventListener(evtType, handler),\n      notifyInteraction: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.INTERACTION_EVENT,\n          {\n            chip: this\n          },\n          true\n        )\n      },\n      notifyTrailingIconInteraction: () => {\n        this.$emit('trailingIconClick')\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.TRAILING_ICON_INTERACTION_EVENT,\n          {\n            chip: this\n          },\n          true\n        )\n      },\n\n      registerTrailingIconInteractionHandler: (evtType, handler) => {\n        if (this.$refs.trailingIcon) {\n          this.$refs.trailingIcon.addEventListener(\n            evtType,\n            handler,\n            applyPassive()\n          )\n        }\n      },\n      deregisterTrailingIconInteractionHandler: (evtType, handler) => {\n        if (this.$refs.trailingIcon) {\n          this.$refs.trailingIcon.removeEventListener(\n            evtType,\n            handler,\n            applyPassive()\n          )\n        }\n      },\n      notifyRemoval: () =>\n        this.emit(\n          MDCChipFoundation.strings.REMOVAL_EVENT,\n          { chip: this },\n          true\n        ),\n      getComputedStyleValue: propertyName =>\n        window.getComputedStyle(this.$el).getPropertyValue(propertyName),\n      setStyleProperty: (property, value) =>\n        this.$set(this.styles, property, value)\n    })\n\n    this.foundation.init()\n\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.ripple.destroy()\n    this.foundation.destroy()\n  },\n  methods: {\n    toggleSelected() {\n      this.foundation.toggleSelected()\n    },\n    isSelected() {\n      return this.foundation.isSelected()\n    }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  CHIP_SELECTOR: '.mdc-chip',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  CHOICE: 'mdc-chip-set--choice',\n  FILTER: 'mdc-chip-set--filter',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Chip Set.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Chip Set into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCChipSetAdapter {\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Appends and returns a new chip element with the given text, leading icon, and trailing icon.\n   * @param {string} text\n   * @param {?Element} leadingIcon\n   * @param {?Element} trailingIcon\n   * @return {!Element}\n   */\n  appendChip(text, leadingIcon, trailingIcon) {}\n\n  /**\n   * Removes the chip object from the chip set.\n   * @param {!Object} chip\n   */\n  removeChip(chip) {}\n}\n\nexport default MDCChipSetAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipSetAdapter from './adapter';\nimport MDCChipFoundation from '../chip/foundation';\nimport {strings, cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCChipSetAdapter>}\n * @final\n */\nclass MDCChipSetFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCChipSetAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipSetAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipSetAdapter} */ ({\n      hasClass: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      appendChip: () => {},\n      removeChip: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipSetAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipSetFoundation.defaultAdapter, adapter));\n\n    /**\n     * The selected chips in the set. Only used for choice chip set or filter chip set.\n     * @private {!Array<!MDCChipFoundation>}\n     */\n    this.selectedChips_ = [];\n\n    /** @private {function(!Event): undefined} */\n    this.chipInteractionHandler_ = (evt) => this.handleChipInteraction_(evt);\n    /** @private {function(!Event): undefined} */\n    this.chipRemovalHandler_ = (evt) => this.handleChipRemoval_(evt);\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler(\n      MDCChipFoundation.strings.INTERACTION_EVENT, this.chipInteractionHandler_);\n    this.adapter_.registerInteractionHandler(\n      MDCChipFoundation.strings.REMOVAL_EVENT, this.chipRemovalHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler(\n      MDCChipFoundation.strings.INTERACTION_EVENT, this.chipInteractionHandler_);\n    this.adapter_.deregisterInteractionHandler(\n      MDCChipFoundation.strings.REMOVAL_EVENT, this.chipRemovalHandler_);\n  }\n\n  /**\n   * Returns a new chip element with the given text, leading icon, and trailing icon,\n   * added to the root chip set element.\n   * @param {string} text\n   * @param {?Element} leadingIcon\n   * @param {?Element} trailingIcon\n   * @return {!Element}\n   */\n  addChip(text, leadingIcon, trailingIcon) {\n    const chipEl = this.adapter_.appendChip(text, leadingIcon, trailingIcon);\n    return chipEl;\n  }\n\n  /**\n   * Selects the given chip. Deselects all other chips if the chip set is of the choice variant.\n   * @param {!MDCChipFoundation} chipFoundation\n   */\n  select(chipFoundation) {\n    if (this.adapter_.hasClass(cssClasses.CHOICE)) {\n      this.deselectAll_();\n    }\n    chipFoundation.setSelected(true);\n    this.selectedChips_.push(chipFoundation);\n  }\n\n  /**\n   * Deselects the given chip.\n   * @param {!MDCChipFoundation} chipFoundation\n   */\n  deselect(chipFoundation) {\n    const index = this.selectedChips_.indexOf(chipFoundation);\n    if (index >= 0) {\n      this.selectedChips_.splice(index, 1);\n    }\n    chipFoundation.setSelected(false);\n  }\n\n  /** Deselects all selected chips. */\n  deselectAll_() {\n    this.selectedChips_.forEach((chipFoundation) => {\n      chipFoundation.setSelected(false);\n    });\n    this.selectedChips_.length = 0;\n  }\n\n  /**\n   * Handles a chip interaction event\n   * @param {!Event} evt\n   * @private\n   */\n  handleChipInteraction_(evt) {\n    const chipFoundation = evt.detail.chip.foundation;\n    if (this.adapter_.hasClass(cssClasses.CHOICE) || this.adapter_.hasClass(cssClasses.FILTER)) {\n      if (chipFoundation.isSelected()) {\n        this.deselect(chipFoundation);\n      } else {\n        this.select(chipFoundation);\n      }\n    }\n  }\n\n  /**\n   * Handles the event when a chip is removed.\n   * @param {!Event} evt\n   * @private\n   */\n  handleChipRemoval_(evt) {\n    const {chip} = evt.detail;\n    this.deselect(chip.foundation);\n    this.adapter_.removeChip(chip);\n  }\n}\n\nexport default MDCChipSetFoundation;\n","<template>\n  <div \n    :class=\"classes\" \n    v-on=\"$listeners\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nimport MDCChipSetFoundation from '@material/chips/chip-set/foundation'\nimport MDCChipFoundation from '@material/chips/chip/foundation'\nexport default {\n  name: 'mdc-chip-set',\n  props: {\n    choice: [Boolean],\n    filter: [Boolean],\n    input: [Boolean]\n  },\n  provide() {\n    return { mdcChipSet: this }\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-chip-set': true,\n        'mdc-chip-set--choice': this.choice,\n        'mdc-chip-set--filter': this.filter,\n        'mdc-chip-set--input': this.input\n      }\n    }\n  },\n  mounted() {\n    this.foundation = new MDCChipSetFoundation({\n      hasClass: className => this.$el.classList.contains(className),\n      registerInteractionHandler: (evtType, handler) => {\n        this.$el.addEventListener(evtType, handler)\n      },\n      deregisterInteractionHandler: (evtType, handler) => {\n        this.$el.removeEventListener(evtType, handler)\n      },\n      appendChip: (text, leadingIcon, trailingIcon) => {\n        const chipTextEl = document.createElement('div')\n        chipTextEl.classList.add(MDCChipFoundation.cssClasses.TEXT)\n        chipTextEl.appendChild(document.createTextNode(text))\n\n        const chipEl = document.createElement('div')\n        chipEl.classList.add(MDCChipFoundation.cssClasses.CHIP)\n        if (leadingIcon) {\n          chipEl.appendChild(leadingIcon)\n        }\n        chipEl.appendChild(chipTextEl)\n        if (trailingIcon) {\n          chipEl.appendChild(trailingIcon)\n        }\n        this.root_.appendChild(chipEl)\n        return chipEl\n      },\n      removeChip: chip => {\n        const index = this.chips.indexOf(chip)\n        this.chips.splice(index, 1)\n        chip.remove()\n      }\n    })\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  methods: {}\n}\n</script>\n","export function autoInit(plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n","import './styles.scss'\nimport { autoInit } from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["supportsPassive_","applyPassive","globalObj","window","forceRefresh","undefined","isSupported","document","addEventListener","passive","e","CustomLink","type","String","default","Object","h","context","element","data","babelHelpers.extends","props","link","parent","$router","$root","$options","components","tag","on","click","nativeOn","children","CustomLinkMixin","Boolean","this","to","exact","append","replace","activeClass","exactActiveClass","emitCustomEvent","el","evtType","evtData","shouldBubble","evt","CustomEvent","createEvent","initCustomEvent","dispatchEvent","MDCFoundation","adapter","adapter_","strings","className","target","handler","propertyName","value","cssClasses","MDCChipFoundation","defaultAdapter","interactionHandler_","_this","handleInteraction_","transitionEndHandler_","handleTransitionEnd_","trailingIconInteractionHandler_","handleTrailingIconInteraction_","forEach","registerEventHandler","_this2","registerTrailingIconInteractionHandler","deregisterEventHandler","_this3","deregisterTrailingIconInteractionHandler","hasClass","SELECTED","selected","addClass","removeClass","key","keyCode","notifyInteraction","eventTargetHasClass","CHIP_EXIT","notifyRemoval","chipWidth","getComputedStyleValue","setStyleProperty","LEADING_ICON","addClassToLeadingIcon","HIDDEN_LEADING_ICON","CHECKMARK","removeClassFromLeadingIcon","stopPropagation","notifyTrailingIconInteraction","varName","numbers","supportsCssVariables_","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","requestAnimationFrame","BG_FOCUSED","blurHandler_","resizeHandler_","layout","unboundedCoords_","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isSupported_","registerRootHandlers_","ROOT","UNBOUNDED","isUnbounded","layoutInternal_","FG_ACTIVATION","deregisterRootHandlers_","deregisterDeactivationHandlers_","removeCssVars_","registerInteractionHandler","_this4","registerResizeHandler","registerDocumentInteractionHandler","_this5","deregisterInteractionHandler","_this6","deregisterResizeHandler","deregisterDocumentInteractionHandler","_this7","keys","k","indexOf","updateCssVariable","isSurfaceDisabled","activationState","isActivated","previousActivationEvent","isProgrammatic","activationEvent","wasActivatedByPointer","length","some","_this9","containsEventTarget","resetActivationState_","push","registerDeactivationHandlers_","wasElementMadeActive","checkElementMadeActive_","animateActivation_","isSurfaceActive","event","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","FG_DEACTIVATION","DEACTIVATION_TIMEOUT_MS","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","computeBoundingRect","setTimeout","_this10","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","getWindowPageOffset","left","top","changedTouches","pageX","pageY","hasDeactivationUXRun","FG_DEACTIVATION_MS","_this12","TAP_DELAY_MS","state","_this13","animateDeactivation_","maxDim","Math","max","sqrt","pow","_this15","PADDING","INITIAL_ORIGIN_SCALE","updateLayoutCssVars_","VAR_FG_SIZE","VAR_LEFT","VAR_TOP","VAR_FG_SCALE","round","unbounded","RippleBase","vm","options","windowObj","supportsCssVariables","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","createElement","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","$el","MATCHES","disabled","$set","classes","$delete","contains","removeEventListener","documentElement","styles","getBoundingClientRect","pageXOffset","pageYOffset","ref","_matches","HTMLElementPrototype","HTMLElement","prototype","filter","p","pop","render","mdcChipSet","leadingIcon","leadingIconClasses","trailingIcon","trailingIconClasses","foundation","classList","haveleadingIcon","$refs","add","INTERACTION_EVENT","$emit","TRAILING_ICON_INTERACTION_EVENT","emit","REMOVAL_EVENT","chip","getPropertyValue","property","init","ripple","destroy","toggleSelected","isSelected","text","MDCChipSetFoundation","selectedChips_","chipInteractionHandler_","handleChipInteraction_","chipRemovalHandler_","handleChipRemoval_","appendChip","chipFoundation","CHOICE","deselectAll_","setSelected","index","splice","detail","FILTER","deselect","select","removeChip","choice","input","chipTextEl","TEXT","createTextNode","chipEl","CHIP","root_","chips","component","name","plugin","_Vue","Vue","global","use"],"mappings":"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"}