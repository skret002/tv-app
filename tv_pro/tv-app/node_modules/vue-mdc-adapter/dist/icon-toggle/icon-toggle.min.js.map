{"version":3,"file":"icon-toggle.min.js","sources":["../../node_modules/@material/base/foundation.js","../../node_modules/@material/icon-toggle/constants.js","../../node_modules/@material/icon-toggle/adapter.js","../../node_modules/@material/icon-toggle/foundation.js","../../node_modules/@material/ripple/adapter.js","../../node_modules/@material/ripple/constants.js","../../node_modules/@material/ripple/util.js","../../node_modules/@material/ripple/foundation.js","../../components/base/base-plugin.js","../../components/ripple/mdc-ripple-base.js","../../components/icon-toggle/mdc-icon-toggle.vue","../../components/base/auto-init.js","../../components/icon-toggle/entry.js"],"sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-icon-toggle',\n  DISABLED: 'mdc-icon-toggle--disabled',\n};\n\n/** @enum {string} */\nconst strings = {\n  DATA_TOGGLE_ON: 'data-toggle-on',\n  DATA_TOGGLE_OFF: 'data-toggle-off',\n  ARIA_PRESSED: 'aria-pressed',\n  ARIA_DISABLED: 'aria-disabled',\n  ARIA_LABEL: 'aria-label',\n  CHANGE_EVENT: 'MDCIconToggle:change',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Icon Toggle. Provides an interface for managing\n * - classes\n * - dom\n * - inner text\n * - event handlers\n * - event dispatch\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\n\nclass MDCIconToggleAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /** @param {string} text */\n  setText(text) {}\n\n  /** @return {number} */\n  getTabIndex() {}\n\n  /** @param {number} tabIndex */\n  setTabIndex(tabIndex) {}\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n  getAttr(name) {}\n\n  /**\n   * @param {string} name\n   * @param {string} value\n   */\n  setAttr(name, value) {}\n\n  /** @param {string} name */\n  rmAttr(name) {}\n\n  /** @param {!IconToggleEvent} evtData */\n  notifyChange(evtData) {}\n}\n\n/**\n * @typedef {{\n *   isOn: boolean,\n * }}\n */\nlet IconToggleEvent;\n\nexport {MDCIconToggleAdapter, IconToggleEvent};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCIconToggleAdapter, IconToggleEvent} from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCIconToggleAdapter>}\n */\nclass MDCIconToggleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      setText: (/* text: string */) => {},\n      getTabIndex: () => /* number */ 0,\n      setTabIndex: (/* tabIndex: number */) => {},\n      getAttr: (/* name: string */) => /* string */ '',\n      setAttr: (/* name: string, value: string */) => {},\n      rmAttr: (/* name: string */) => {},\n      notifyChange: (/* evtData: IconToggleEvent */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCIconToggleFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.on_ = false;\n\n    /** @private {boolean} */\n    this.disabled_ = false;\n\n    /** @private {number} */\n    this.savedTabIndex_ = -1;\n\n    /** @private {?IconToggleState} */\n    this.toggleOnData_ = null;\n\n    /** @private {?IconToggleState} */\n    this.toggleOffData_ = null;\n\n    this.clickHandler_ = /** @private {!EventListener} */ (\n      () => this.toggleFromEvt_());\n\n    /** @private {boolean} */\n    this.isHandlingKeydown_ = false;\n\n    this.keydownHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = true;\n        return evt.preventDefault();\n      }\n    });\n\n    this.keyupHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = false;\n        this.toggleFromEvt_();\n      }\n    });\n  }\n\n  init() {\n    this.refreshToggleData();\n    this.savedTabIndex_ = this.adapter_.getTabIndex();\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  refreshToggleData() {\n    const {DATA_TOGGLE_ON, DATA_TOGGLE_OFF} = MDCIconToggleFoundation.strings;\n    this.toggleOnData_ = this.parseJsonDataAttr_(DATA_TOGGLE_ON);\n    this.toggleOffData_ = this.parseJsonDataAttr_(DATA_TOGGLE_OFF);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  /** @private */\n  toggleFromEvt_() {\n    this.toggle();\n    const {on_: isOn} = this;\n    this.adapter_.notifyChange(/** @type {!IconToggleEvent} */ ({isOn}));\n  }\n\n  /** @return {boolean} */\n  isOn() {\n    return this.on_;\n  }\n\n  /** @param {boolean=} isOn */\n  toggle(isOn = !this.on_) {\n    this.on_ = isOn;\n\n    const {ARIA_LABEL, ARIA_PRESSED} = MDCIconToggleFoundation.strings;\n\n    if (this.on_) {\n      this.adapter_.setAttr(ARIA_PRESSED, 'true');\n    } else {\n      this.adapter_.setAttr(ARIA_PRESSED, 'false');\n    }\n\n    const {cssClass: classToRemove} =\n        this.on_ ? this.toggleOffData_ : this.toggleOnData_;\n\n    if (classToRemove) {\n      this.adapter_.removeClass(classToRemove);\n    }\n\n    const {content, label, cssClass} = this.on_ ? this.toggleOnData_ : this.toggleOffData_;\n\n    if (cssClass) {\n      this.adapter_.addClass(cssClass);\n    }\n    if (content) {\n      this.adapter_.setText(content);\n    }\n    if (label) {\n      this.adapter_.setAttr(ARIA_LABEL, label);\n    }\n  }\n\n  /**\n   * @param {string} dataAttr\n   * @return {!IconToggleState}\n   */\n  parseJsonDataAttr_(dataAttr) {\n    const val = this.adapter_.getAttr(dataAttr);\n    if (!val) {\n      return {};\n    }\n    return /** @type {!IconToggleState} */ (JSON.parse(val));\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  /** @param {boolean} isDisabled */\n  setDisabled(isDisabled) {\n    this.disabled_ = isDisabled;\n\n    const {DISABLED} = MDCIconToggleFoundation.cssClasses;\n    const {ARIA_DISABLED} = MDCIconToggleFoundation.strings;\n\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setTabIndex(-1);\n      this.adapter_.setAttr(ARIA_DISABLED, 'true');\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.setTabIndex(this.savedTabIndex_);\n      this.adapter_.rmAttr(ARIA_DISABLED);\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  /** @return {boolean} */\n  isKeyboardActivated() {\n    return this.isHandlingKeydown_;\n  }\n}\n\n/**\n * @typedef {{\n *   key: string,\n *   keyCode: number\n * }}\n */\nlet KeyboardKey;\n\n/**\n * @param {!KeyboardKey} keyboardKey\n * @return {boolean}\n */\nfunction isSpace(keyboardKey) {\n  return keyboardKey.key === 'Space' || keyboardKey.keyCode === 32;\n}\n\n\n/** @record */\nclass IconToggleState {}\n\n/**\n * The aria-label value of the icon toggle, or undefined if there is no aria-label.\n * @export {string|undefined}\n */\nIconToggleState.prototype.label;\n\n/**\n * The text for the icon toggle, or undefined if there is no text.\n * @export {string|undefined}\n */\nIconToggleState.prototype.content;\n\n/**\n * The CSS class to add to the icon toggle, or undefined if there is no CSS class.\n * @export {string|undefined}\n */\nIconToggleState.prototype.cssClass;\n\nexport default MDCIconToggleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  isSupported_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  init() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.registerRootHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(ROOT);\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.addClass(UNBOUNDED);\n        // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n        this.layoutInternal_();\n      }\n    });\n  }\n\n  destroy() {\n    if (!this.isSupported_()) {\n      return;\n    }\n\n    if (this.activationTimer_) {\n      clearTimeout(this.activationTimer_);\n      this.activationTimer_ = 0;\n      const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n      this.adapter_.removeClass(FG_ACTIVATION);\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(ROOT);\n      this.adapter_.removeClass(UNBOUNDED);\n      this.removeCssVars_();\n    });\n  }\n\n  /** @private */\n  registerRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.registerResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n}\n\nexport default MDCRippleFoundation;\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","import MDCRippleFoundation from '@material/ripple/foundation.js'\nimport {\n  supportsCssVariables,\n  getMatchesProperty,\n  applyPassive\n} from '@material/ripple/util'\n\nexport class RippleBase extends MDCRippleFoundation {\n  static get MATCHES() {\n    /* global HTMLElement */\n    return (\n      RippleBase._matches ||\n      (RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\n    )\n  }\n\n  static isSurfaceActive(ref) {\n    return ref[RippleBase.MATCHES](':active')\n  }\n\n  constructor(vm, options) {\n    super(\n      Object.assign(\n        {\n          browserSupportsCssVars: () => {\n            return supportsCssVariables(window)\n          },\n          isUnbounded: () => {\n            return false\n          },\n          isSurfaceActive: () => {\n            return vm.$el[RippleBase.MATCHES](':active')\n          },\n          isSurfaceDisabled: () => {\n            return vm.disabled\n          },\n          addClass(className) {\n            vm.$set(vm.classes, className, true)\n          },\n          removeClass(className) {\n            vm.$delete(vm.classes, className)\n          },\n          containsEventTarget: target => vm.$el.contains(target),\n          registerInteractionHandler: (evt, handler) => {\n            vm.$el.addEventListener(evt, handler, applyPassive())\n          },\n          deregisterInteractionHandler: (evt, handler) => {\n            vm.$el.removeEventListener(evt, handler, applyPassive())\n          },\n          registerDocumentInteractionHandler: (evtType, handler) =>\n            document.documentElement.addEventListener(\n              evtType,\n              handler,\n              applyPassive()\n            ),\n          deregisterDocumentInteractionHandler: (evtType, handler) =>\n            document.documentElement.removeEventListener(\n              evtType,\n              handler,\n              applyPassive()\n            ),\n          registerResizeHandler: handler => {\n            return window.addEventListener('resize', handler)\n          },\n          deregisterResizeHandler: handler => {\n            return window.removeEventListener('resize', handler)\n          },\n          updateCssVariable: (varName, value) => {\n            vm.$set(vm.styles, varName, value)\n          },\n          computeBoundingRect: () => {\n            return vm.$el.getBoundingClientRect()\n          },\n          getWindowPageOffset: () => {\n            return { x: window.pageXOffset, y: window.pageYOffset }\n          }\n        },\n        options\n      )\n    )\n  }\n}\n\nexport const RippleMixin = {\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  mounted() {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.ripple.destroy()\n  }\n}\n","<template>\n  <span \n    :class=\"classes\" \n    :style=\"styles\" \n    :tabindex=\"tabIndex\"\n    :data-toggle-on=\"toggleOnData\" \n    :data-toggle-off=\"toggleOffData\"\n    class=\"mdc-icon-toggle\"\n    role=\"button\"\n    aria-pressed=\"false\">\n    <i \n      :class=\"iconClasses\" \n      aria-hidden=\"true\">{{ text }}</i>\n  </span>\n</template>\n\n<script>\nimport MDCIconToggleFoundation from '@material/icon-toggle/foundation'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-icon-toggle',\n  props: {\n    toggleOn: [String, Object],\n    toggleOff: [String, Object],\n    value: Boolean,\n    disabled: Boolean,\n    accent: Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-icon-toggle--accent': this.accent\n      },\n      styles: {},\n      iconClasses: {},\n      tabIndex: 0,\n      text: ''\n    }\n  },\n  computed: {\n    toggleOnData() {\n      let toggle = this.toggleOn\n      return (\n        toggle &&\n        JSON.stringify(\n          typeof toggle === 'string'\n            ? {\n                content: toggle,\n                cssClass: 'material-icons'\n              }\n            : {\n                content: toggle.icon || toggle.content,\n                label: toggle.label,\n                cssClass: toggle.icon ? 'material-icons' : toggle.cssClass\n              }\n        )\n      )\n    },\n    toggleOffData() {\n      let toggle = this.toggleOff\n      return (\n        toggle &&\n        JSON.stringify(\n          typeof toggle === 'string'\n            ? {\n                content: toggle,\n                cssClass: 'material-icons'\n              }\n            : {\n                content: toggle.icon || toggle.content,\n                label: toggle.label,\n                cssClass: toggle.icon ? 'material-icons' : toggle.cssClass\n              }\n        )\n      )\n    }\n  },\n  watch: {\n    value(value) {\n      this.foundation && this.foundation.toggle(value)\n    },\n    disabled(disabled) {\n      this.foundation && this.foundation.setDisabled(disabled)\n    },\n    toggleOnData() {\n      this.foundation && this.foundation.refreshToggleData()\n    },\n    toggleOffData() {\n      this.foundation && this.foundation.refreshToggleData()\n    },\n    accent(value) {\n      this.$set(this.classes, 'mdc-icon-toggle--secondary', value)\n    }\n  },\n  mounted() {\n    this.foundation = new MDCIconToggleFoundation({\n      addClass: className => this.$set(this.iconClasses, className, true),\n      removeClass: className => this.$delete(this.iconClasses, className),\n      registerInteractionHandler: (evt, handler) =>\n        this.$el.addEventListener(evt, handler),\n      deregisterInteractionHandler: (evt, handler) =>\n        this.$el.removeEventListener(evt, handler),\n      setText: text => {\n        this.text = text\n      },\n      getTabIndex: () => this.tabIndex,\n      setTabIndex: tabIndex => {\n        this.tabIndex = tabIndex\n      },\n      getAttr: (name, value) => this.$el.getAttribute(name, value),\n      setAttr: (name, value) => {\n        this.$el.setAttribute(name, value)\n      },\n      rmAttr: name => {\n        this.$el.removeAttribute(name)\n      },\n      notifyChange: evtData => {\n        this.$emit('input', evtData.isOn)\n      }\n    })\n    this.foundation.init()\n    this.foundation.toggle(this.value)\n    this.foundation.setDisabled(this.disabled)\n\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true,\n      isSurfaceActive: () => this.foundation.isKeyboardActivated()\n    })\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n    this.ripple.destroy()\n  }\n}\n</script>\n","export function autoInit(plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n","import './styles.scss'\nimport { autoInit } from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["MDCFoundation","adapter","adapter_","cssClasses","className","type","handler","text","tabIndex","name","value","evtData","strings","MDCIconToggleFoundation","babelHelpers.extends","defaultAdapter","on_","disabled_","savedTabIndex_","toggleOnData_","toggleOffData_","clickHandler_","_this","toggleFromEvt_","isHandlingKeydown_","keydownHandler_","evt","isSpace","preventDefault","keyupHandler_","refreshToggleData","this","getTabIndex","registerInteractionHandler","DATA_TOGGLE_ON","DATA_TOGGLE_OFF","parseJsonDataAttr_","deregisterInteractionHandler","toggle","isOn","notifyChange","ARIA_LABEL","ARIA_PRESSED","setAttr","classToRemove","cssClass","removeClass","content","label","addClass","setText","dataAttr","val","getAttr","JSON","parse","isDisabled","DISABLED","ARIA_DISABLED","setTabIndex","rmAttr","keyboardKey","key","keyCode","target","evtType","varName","numbers","supportsCssVariables_","supportsPassive_","applyPassive","globalObj","window","forceRefresh","undefined","isSupported","document","addEventListener","passive","e","components","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","requestAnimationFrame","BG_FOCUSED","blurHandler_","resizeHandler_","layout","unboundedCoords_","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isSupported_","registerRootHandlers_","ROOT","UNBOUNDED","_this2","isUnbounded","layoutInternal_","FG_ACTIVATION","deregisterRootHandlers_","deregisterDeactivationHandlers_","removeCssVars_","forEach","_this4","registerResizeHandler","registerDocumentInteractionHandler","_this5","_this6","deregisterResizeHandler","deregisterDocumentInteractionHandler","_this7","keys","k","indexOf","updateCssVariable","isSurfaceDisabled","activationState","isActivated","previousActivationEvent","isProgrammatic","activationEvent","wasActivatedByPointer","length","some","_this9","containsEventTarget","resetActivationState_","push","registerDeactivationHandlers_","wasElementMadeActive","checkElementMadeActive_","animateActivation_","isSurfaceActive","event","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","FG_DEACTIVATION","DEACTIVATION_TIMEOUT_MS","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","computeBoundingRect","setTimeout","_this10","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","getWindowPageOffset","left","top","changedTouches","pageX","pageY","hasDeactivationUXRun","FG_DEACTIVATION_MS","_this12","TAP_DELAY_MS","state","_this13","animateDeactivation_","maxDim","Math","max","sqrt","pow","_this15","PADDING","INITIAL_ORIGIN_SCALE","updateLayoutCssVars_","VAR_FG_SIZE","VAR_LEFT","VAR_TOP","VAR_FG_SCALE","round","unbounded","RippleBase","vm","options","windowObj","supportsCssVariables","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","createElement","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","$el","MATCHES","disabled","$set","classes","$delete","contains","removeEventListener","documentElement","styles","getBoundingClientRect","pageXOffset","pageYOffset","ref","_matches","HTMLElementPrototype","HTMLElement","prototype","filter","p","pop","render","String","Object","Boolean","accent","toggleOn","stringify","icon","toggleOff","foundation","setDisabled","iconClasses","getAttribute","setAttribute","removeAttribute","$emit","init","ripple","isKeyboardActivated","destroy","component","plugin","_Vue","Vue","global","use"],"mappings":"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"}