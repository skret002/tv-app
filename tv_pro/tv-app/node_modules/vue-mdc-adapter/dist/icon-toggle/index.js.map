{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-event.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/icon-toggle/adapter.js","../../node_modules/@material/icon-toggle/constants.js","../../node_modules/@material/icon-toggle/foundation.js","../../components/icon-toggle/mdc-icon-toggle.vue","../../components/icon-toggle/index.js"],"sourcesContent":["export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Icon Toggle. Provides an interface for managing\n * - classes\n * - dom\n * - inner text\n * - event handlers\n * - event dispatch\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\n\nclass MDCIconToggleAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /** @param {string} text */\n  setText(text) {}\n\n  /** @return {number} */\n  getTabIndex() {}\n\n  /** @param {number} tabIndex */\n  setTabIndex(tabIndex) {}\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n  getAttr(name) {}\n\n  /**\n   * @param {string} name\n   * @param {string} value\n   */\n  setAttr(name, value) {}\n\n  /** @param {string} name */\n  rmAttr(name) {}\n\n  /** @param {!IconToggleEvent} evtData */\n  notifyChange(evtData) {}\n}\n\n/**\n * @typedef {{\n *   isOn: boolean,\n * }}\n */\nlet IconToggleEvent;\n\nexport {MDCIconToggleAdapter, IconToggleEvent};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-icon-toggle',\n  DISABLED: 'mdc-icon-toggle--disabled',\n};\n\n/** @enum {string} */\nconst strings = {\n  DATA_TOGGLE_ON: 'data-toggle-on',\n  DATA_TOGGLE_OFF: 'data-toggle-off',\n  ARIA_PRESSED: 'aria-pressed',\n  ARIA_DISABLED: 'aria-disabled',\n  ARIA_LABEL: 'aria-label',\n  CHANGE_EVENT: 'MDCIconToggle:change',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCIconToggleAdapter, IconToggleEvent} from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCIconToggleAdapter>}\n */\nclass MDCIconToggleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      setText: (/* text: string */) => {},\n      getTabIndex: () => /* number */ 0,\n      setTabIndex: (/* tabIndex: number */) => {},\n      getAttr: (/* name: string */) => /* string */ '',\n      setAttr: (/* name: string, value: string */) => {},\n      rmAttr: (/* name: string */) => {},\n      notifyChange: (/* evtData: IconToggleEvent */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCIconToggleFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.on_ = false;\n\n    /** @private {boolean} */\n    this.disabled_ = false;\n\n    /** @private {number} */\n    this.savedTabIndex_ = -1;\n\n    /** @private {?IconToggleState} */\n    this.toggleOnData_ = null;\n\n    /** @private {?IconToggleState} */\n    this.toggleOffData_ = null;\n\n    this.clickHandler_ = /** @private {!EventListener} */ (\n      () => this.toggleFromEvt_());\n\n    /** @private {boolean} */\n    this.isHandlingKeydown_ = false;\n\n    this.keydownHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = true;\n        return evt.preventDefault();\n      }\n    });\n\n    this.keyupHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = false;\n        this.toggleFromEvt_();\n      }\n    });\n  }\n\n  init() {\n    this.refreshToggleData();\n    this.savedTabIndex_ = this.adapter_.getTabIndex();\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  refreshToggleData() {\n    const {DATA_TOGGLE_ON, DATA_TOGGLE_OFF} = MDCIconToggleFoundation.strings;\n    this.toggleOnData_ = this.parseJsonDataAttr_(DATA_TOGGLE_ON);\n    this.toggleOffData_ = this.parseJsonDataAttr_(DATA_TOGGLE_OFF);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  /** @private */\n  toggleFromEvt_() {\n    this.toggle();\n    const {on_: isOn} = this;\n    this.adapter_.notifyChange(/** @type {!IconToggleEvent} */ ({isOn}));\n  }\n\n  /** @return {boolean} */\n  isOn() {\n    return this.on_;\n  }\n\n  /** @param {boolean=} isOn */\n  toggle(isOn = !this.on_) {\n    this.on_ = isOn;\n\n    const {ARIA_LABEL, ARIA_PRESSED} = MDCIconToggleFoundation.strings;\n\n    if (this.on_) {\n      this.adapter_.setAttr(ARIA_PRESSED, 'true');\n    } else {\n      this.adapter_.setAttr(ARIA_PRESSED, 'false');\n    }\n\n    const {cssClass: classToRemove} =\n        this.on_ ? this.toggleOffData_ : this.toggleOnData_;\n\n    if (classToRemove) {\n      this.adapter_.removeClass(classToRemove);\n    }\n\n    const {content, label, cssClass} = this.on_ ? this.toggleOnData_ : this.toggleOffData_;\n\n    if (cssClass) {\n      this.adapter_.addClass(cssClass);\n    }\n    if (content) {\n      this.adapter_.setText(content);\n    }\n    if (label) {\n      this.adapter_.setAttr(ARIA_LABEL, label);\n    }\n  }\n\n  /**\n   * @param {string} dataAttr\n   * @return {!IconToggleState}\n   */\n  parseJsonDataAttr_(dataAttr) {\n    const val = this.adapter_.getAttr(dataAttr);\n    if (!val) {\n      return {};\n    }\n    return /** @type {!IconToggleState} */ (JSON.parse(val));\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  /** @param {boolean} isDisabled */\n  setDisabled(isDisabled) {\n    this.disabled_ = isDisabled;\n\n    const {DISABLED} = MDCIconToggleFoundation.cssClasses;\n    const {ARIA_DISABLED} = MDCIconToggleFoundation.strings;\n\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setTabIndex(-1);\n      this.adapter_.setAttr(ARIA_DISABLED, 'true');\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.setTabIndex(this.savedTabIndex_);\n      this.adapter_.rmAttr(ARIA_DISABLED);\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  /** @return {boolean} */\n  isKeyboardActivated() {\n    return this.isHandlingKeydown_;\n  }\n}\n\n/**\n * @typedef {{\n *   key: string,\n *   keyCode: number\n * }}\n */\nlet KeyboardKey;\n\n/**\n * @param {!KeyboardKey} keyboardKey\n * @return {boolean}\n */\nfunction isSpace(keyboardKey) {\n  return keyboardKey.key === 'Space' || keyboardKey.keyCode === 32;\n}\n\n\n/** @record */\nclass IconToggleState {}\n\n/**\n * The aria-label value of the icon toggle, or undefined if there is no aria-label.\n * @export {string|undefined}\n */\nIconToggleState.prototype.label;\n\n/**\n * The text for the icon toggle, or undefined if there is no text.\n * @export {string|undefined}\n */\nIconToggleState.prototype.content;\n\n/**\n * The CSS class to add to the icon toggle, or undefined if there is no CSS class.\n * @export {string|undefined}\n */\nIconToggleState.prototype.cssClass;\n\nexport default MDCIconToggleFoundation;\n","<template>\n  <span \n    :class=\"classes\" \n    :style=\"styles\" \n    :tabindex=\"tabIndex\"\n    :data-toggle-on=\"toggleOnData\" \n    :data-toggle-off=\"toggleOffData\"\n    class=\"mdc-icon-toggle\"\n    role=\"button\"\n    aria-pressed=\"false\">\n    <i \n      :class=\"iconClasses\" \n      aria-hidden=\"true\">{{ text }}</i>\n  </span>\n</template>\n\n<script>\nimport MDCIconToggleFoundation from '@material/icon-toggle/foundation'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-icon-toggle',\n  props: {\n    toggleOn: [String, Object],\n    toggleOff: [String, Object],\n    value: Boolean,\n    disabled: Boolean,\n    accent: Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-icon-toggle--accent': this.accent\n      },\n      styles: {},\n      iconClasses: {},\n      tabIndex: 0,\n      text: ''\n    }\n  },\n  computed: {\n    toggleOnData() {\n      let toggle = this.toggleOn\n      return (\n        toggle &&\n        JSON.stringify(\n          typeof toggle === 'string'\n            ? {\n                content: toggle,\n                cssClass: 'material-icons'\n              }\n            : {\n                content: toggle.icon || toggle.content,\n                label: toggle.label,\n                cssClass: toggle.icon ? 'material-icons' : toggle.cssClass\n              }\n        )\n      )\n    },\n    toggleOffData() {\n      let toggle = this.toggleOff\n      return (\n        toggle &&\n        JSON.stringify(\n          typeof toggle === 'string'\n            ? {\n                content: toggle,\n                cssClass: 'material-icons'\n              }\n            : {\n                content: toggle.icon || toggle.content,\n                label: toggle.label,\n                cssClass: toggle.icon ? 'material-icons' : toggle.cssClass\n              }\n        )\n      )\n    }\n  },\n  watch: {\n    value(value) {\n      this.foundation && this.foundation.toggle(value)\n    },\n    disabled(disabled) {\n      this.foundation && this.foundation.setDisabled(disabled)\n    },\n    toggleOnData() {\n      this.foundation && this.foundation.refreshToggleData()\n    },\n    toggleOffData() {\n      this.foundation && this.foundation.refreshToggleData()\n    },\n    accent(value) {\n      this.$set(this.classes, 'mdc-icon-toggle--secondary', value)\n    }\n  },\n  mounted() {\n    this.foundation = new MDCIconToggleFoundation({\n      addClass: className => this.$set(this.iconClasses, className, true),\n      removeClass: className => this.$delete(this.iconClasses, className),\n      registerInteractionHandler: (evt, handler) =>\n        this.$el.addEventListener(evt, handler),\n      deregisterInteractionHandler: (evt, handler) =>\n        this.$el.removeEventListener(evt, handler),\n      setText: text => {\n        this.text = text\n      },\n      getTabIndex: () => this.tabIndex,\n      setTabIndex: tabIndex => {\n        this.tabIndex = tabIndex\n      },\n      getAttr: (name, value) => this.$el.getAttribute(name, value),\n      setAttr: (name, value) => {\n        this.$el.setAttribute(name, value)\n      },\n      rmAttr: name => {\n        this.$el.removeAttribute(name)\n      },\n      notifyChange: evtData => {\n        this.$emit('input', evtData.isOn)\n      }\n    })\n    this.foundation.init()\n    this.foundation.toggle(this.value)\n    this.foundation.setDisabled(this.disabled)\n\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true,\n      isSurfaceActive: () => this.foundation.isKeyboardActivated()\n    })\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n    this.ripple.destroy()\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcIConToggle from './mdc-icon-toggle.vue'\n\nexport { mdcIConToggle }\n\nexport default BasePlugin({\n  mdcIConToggle\n})\n"],"names":["BasePlugin","components","key","component","name","MDCFoundation","adapter","adapter_","MDCIconToggleAdapter","className","type","handler","text","tabIndex","value","evtData","cssClasses","strings","MDCIconToggleFoundation","babelHelpers.extends","defaultAdapter","on_","disabled_","savedTabIndex_","toggleOnData_","toggleOffData_","clickHandler_","toggleFromEvt_","isHandlingKeydown_","keydownHandler_","evt","isSpace","preventDefault","keyupHandler_","refreshToggleData","getTabIndex","registerInteractionHandler","DATA_TOGGLE_ON","DATA_TOGGLE_OFF","parseJsonDataAttr_","deregisterInteractionHandler","toggle","isOn","notifyChange","ARIA_LABEL","ARIA_PRESSED","setAttr","classToRemove","cssClass","removeClass","content","label","addClass","setText","dataAttr","val","getAttr","JSON","parse","isDisabled","DISABLED","ARIA_DISABLED","setTabIndex","rmAttr","keyboardKey","keyCode","render","String","Object","Boolean","accent","toggleOn","stringify","icon","toggleOff","foundation","disabled","setDisabled","$set","classes","iconClasses","$delete","$el","addEventListener","removeEventListener","getAttribute","setAttribute","removeAttribute","$emit","init","ripple","RippleBase","isKeyboardActivated","destroy"],"mappings":"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"}