{"version":3,"file":"snackbar.min.js","sources":["../../node_modules/@material/base/foundation.js","../../node_modules/@material/snackbar/constants.js","../../node_modules/@material/base/component.js","../../node_modules/@material/snackbar/foundation.js","../../node_modules/@material/animation/index.js","../../components/base/base-plugin.js","../../components/snackbar/mdc-snackbar.vue","../../components/base/auto-init.js","../../components/snackbar/entry.js"],"sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const cssClasses = {\n  ROOT: 'mdc-snackbar',\n  TEXT: 'mdc-snackbar__text',\n  ACTION_WRAPPER: 'mdc-snackbar__action-wrapper',\n  ACTION_BUTTON: 'mdc-snackbar__action-button',\n  ACTIVE: 'mdc-snackbar--active',\n  MULTILINE: 'mdc-snackbar--multiline',\n  ACTION_ON_BOTTOM: 'mdc-snackbar--action-on-bottom',\n};\n\nexport const strings = {\n  TEXT_SELECTOR: '.mdc-snackbar__text',\n  ACTION_WRAPPER_SELECTOR: '.mdc-snackbar__action-wrapper',\n  ACTION_BUTTON_SELECTOR: '.mdc-snackbar__action-button',\n  SHOW_EVENT: 'MDCSnackbar:show',\n  HIDE_EVENT: 'MDCSnackbar:hide',\n};\n\nexport const numbers = {\n  MESSAGE_TIMEOUT: 2750,\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCSnackbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setAriaHidden: () => {},\n      unsetAriaHidden: () => {},\n      setActionAriaHidden: () => {},\n      unsetActionAriaHidden: () => {},\n      setActionText: (/* actionText: string */) => {},\n      setMessageText: (/* message: string */) => {},\n      setFocus: () => {},\n      visibilityIsHidden: () => /* boolean */ false,\n      registerCapturedBlurHandler: (/* handler: EventListener */) => {},\n      deregisterCapturedBlurHandler: (/* handler: EventListener */) => {},\n      registerVisibilityChangeHandler: (/* handler: EventListener */) => {},\n      deregisterVisibilityChangeHandler: (/* handler: EventListener */) => {},\n      registerCapturedInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterCapturedInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerActionClickHandler: (/* handler: EventListener */) => {},\n      deregisterActionClickHandler: (/* handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      notifyShow: () => {},\n      notifyHide: () => {},\n    };\n  }\n\n  get active() {\n    return this.active_;\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSnackbarFoundation.defaultAdapter, adapter));\n\n    this.active_ = false;\n    this.actionWasClicked_ = false;\n    this.dismissOnAction_ = true;\n    this.firstFocus_ = true;\n    this.pointerDownRecognized_ = false;\n    this.snackbarHasFocus_ = false;\n    this.snackbarData_ = null;\n    this.queue_ = [];\n    this.actionClickHandler_ = () => {\n      this.actionWasClicked_ = true;\n      this.invokeAction_();\n    };\n    this.visibilitychangeHandler_ = () => {\n      clearTimeout(this.timeoutId_);\n      this.snackbarHasFocus_ = true;\n\n      if (!this.adapter_.visibilityIsHidden()) {\n        setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n      }\n    };\n    this.interactionHandler_ = (evt) => {\n      if (evt.type == 'touchstart' || evt.type == 'mousedown') {\n        this.pointerDownRecognized_ = true;\n      }\n      this.handlePossibleTabKeyboardFocus_(evt);\n\n      if (evt.type == 'focus') {\n        this.pointerDownRecognized_ = false;\n      }\n    };\n    this.blurHandler_ = () => {\n      clearTimeout(this.timeoutId_);\n      this.snackbarHasFocus_ = false;\n      this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n    };\n  }\n\n  init() {\n    this.adapter_.registerActionClickHandler(this.actionClickHandler_);\n    this.adapter_.setAriaHidden();\n    this.adapter_.setActionAriaHidden();\n  }\n\n  destroy() {\n    this.adapter_.deregisterActionClickHandler(this.actionClickHandler_);\n    this.adapter_.deregisterCapturedBlurHandler(this.blurHandler_);\n    this.adapter_.deregisterVisibilityChangeHandler(this.visibilitychangeHandler_);\n    ['touchstart', 'mousedown', 'focus'].forEach((evtType) => {\n      this.adapter_.deregisterCapturedInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  dismissesOnAction() {\n    return this.dismissOnAction_;\n  }\n\n  setDismissOnAction(dismissOnAction) {\n    this.dismissOnAction_ = !!dismissOnAction;\n  }\n\n  show(data) {\n    if (!data) {\n      throw new Error(\n        'Please provide a data object with at least a message to display.');\n    }\n    if (!data.message) {\n      throw new Error('Please provide a message to be displayed.');\n    }\n    if (data.actionHandler && !data.actionText) {\n      throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n      this.queue_.push(data);\n      return;\n    }\n    clearTimeout(this.timeoutId_);\n    this.snackbarData_ = data;\n    this.firstFocus_ = true;\n    this.adapter_.registerVisibilityChangeHandler(this.visibilitychangeHandler_);\n    this.adapter_.registerCapturedBlurHandler(this.blurHandler_);\n    ['touchstart', 'mousedown', 'focus'].forEach((evtType) => {\n      this.adapter_.registerCapturedInteractionHandler(evtType, this.interactionHandler_);\n    });\n\n    const {ACTIVE, MULTILINE, ACTION_ON_BOTTOM} = cssClasses;\n\n    this.adapter_.setMessageText(this.snackbarData_.message);\n\n    if (this.snackbarData_.multiline) {\n      this.adapter_.addClass(MULTILINE);\n      if (this.snackbarData_.actionOnBottom) {\n        this.adapter_.addClass(ACTION_ON_BOTTOM);\n      }\n    }\n\n    if (this.snackbarData_.actionHandler) {\n      this.adapter_.setActionText(this.snackbarData_.actionText);\n      this.actionHandler_ = this.snackbarData_.actionHandler;\n      this.setActionHidden_(false);\n    } else {\n      this.setActionHidden_(true);\n      this.actionHandler_ = null;\n      this.adapter_.setActionText(null);\n    }\n\n    this.active_ = true;\n    this.adapter_.addClass(ACTIVE);\n    this.adapter_.unsetAriaHidden();\n    this.adapter_.notifyShow();\n\n    this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n  }\n\n  handlePossibleTabKeyboardFocus_() {\n    const hijackFocus =\n      this.firstFocus_ && !this.pointerDownRecognized_;\n\n    if (hijackFocus) {\n      this.setFocusOnAction_();\n    }\n\n    this.firstFocus_ = false;\n  }\n\n  setFocusOnAction_() {\n    this.adapter_.setFocus();\n    this.snackbarHasFocus_ = true;\n    this.firstFocus_ = false;\n  }\n\n  invokeAction_() {\n    try {\n      if (!this.actionHandler_) {\n        return;\n      }\n\n      this.actionHandler_();\n    } finally {\n      if (this.dismissOnAction_) {\n        this.cleanup_();\n      }\n    }\n  }\n\n  cleanup_() {\n    const allowDismissal = !this.snackbarHasFocus_ || this.actionWasClicked_;\n\n    if (allowDismissal) {\n      const {ACTIVE, MULTILINE, ACTION_ON_BOTTOM} = cssClasses;\n\n      this.adapter_.removeClass(ACTIVE);\n\n      const handler = () => {\n        clearTimeout(this.timeoutId_);\n        this.adapter_.deregisterTransitionEndHandler(handler);\n        this.adapter_.removeClass(MULTILINE);\n        this.adapter_.removeClass(ACTION_ON_BOTTOM);\n        this.setActionHidden_(true);\n        this.adapter_.setAriaHidden();\n        this.active_ = false;\n        this.snackbarHasFocus_ = false;\n        this.adapter_.notifyHide();\n        this.showNext_();\n      };\n\n      this.adapter_.registerTransitionEndHandler(handler);\n    }\n  }\n\n  showNext_() {\n    if (!this.queue_.length) {\n      return;\n    }\n    this.show(this.queue_.shift());\n  }\n\n  setActionHidden_(isHidden) {\n    if (isHidden) {\n      this.adapter_.setActionAriaHidden();\n    } else {\n      this.adapter_.unsetActionAriaHidden();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   noPrefix: string,\n *   webkitPrefix: string,\n *   styleProperty: string\n * }}\n */\nlet VendorPropertyMapType;\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst eventTypeMap = {\n  'animationstart': {\n    noPrefix: 'animationstart',\n    webkitPrefix: 'webkitAnimationStart',\n    styleProperty: 'animation',\n  },\n  'animationend': {\n    noPrefix: 'animationend',\n    webkitPrefix: 'webkitAnimationEnd',\n    styleProperty: 'animation',\n  },\n  'animationiteration': {\n    noPrefix: 'animationiteration',\n    webkitPrefix: 'webkitAnimationIteration',\n    styleProperty: 'animation',\n  },\n  'transitionend': {\n    noPrefix: 'transitionend',\n    webkitPrefix: 'webkitTransitionEnd',\n    styleProperty: 'transition',\n  },\n};\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst cssPropertyMap = {\n  'animation': {\n    noPrefix: 'animation',\n    webkitPrefix: '-webkit-animation',\n  },\n  'transform': {\n    noPrefix: 'transform',\n    webkitPrefix: '-webkit-transform',\n  },\n  'transition': {\n    noPrefix: 'transition',\n    webkitPrefix: '-webkit-transition',\n  },\n};\n\n/**\n * @param {!Object} windowObj\n * @return {boolean}\n */\nfunction hasProperShape(windowObj) {\n  return (windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function');\n}\n\n/**\n * @param {string} eventType\n * @return {boolean}\n */\nfunction eventFoundInMaps(eventType) {\n  return (eventType in eventTypeMap || eventType in cssPropertyMap);\n}\n\n/**\n * @param {string} eventType\n * @param {!Object<string, !VendorPropertyMapType>} map\n * @param {!Element} el\n * @return {string}\n */\nfunction getJavaScriptEventName(eventType, map, el) {\n  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n}\n\n/**\n * Helper function to determine browser prefix for CSS3 animation events\n * and property names.\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getAnimationName(windowObj, eventType) {\n  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {\n    return eventType;\n  }\n\n  const map = /** @type {!Object<string, !VendorPropertyMapType>} */ (\n    eventType in eventTypeMap ? eventTypeMap : cssPropertyMap\n  );\n  const el = windowObj['document']['createElement']('div');\n  let eventName = '';\n\n  if (map === eventTypeMap) {\n    eventName = getJavaScriptEventName(eventType, map, el);\n  } else {\n    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n  }\n\n  return eventName;\n}\n\n// Public functions to access getAnimationName() for JavaScript events or CSS\n// property names.\n\nconst transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectEventName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectPropertyName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\nexport {transformStyleProperties, getCorrectEventName, getCorrectPropertyName};\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","<template>\n  <div \n    ref=\"root\" \n    :class=\"classes\" \n    :aria-hidden=\"hidden\" \n    class=\"mdc-snackbar\" \n    aria-live=\"assertive\" \n    aria-atomic=\"true\">\n    <div class=\"mdc-snackbar__text\">{{ message }}</div>\n    <div class=\"mdc-snackbar__action-wrapper\">\n      <button \n        ref=\"button\" \n        :aria-hidden=\"actionHidden\" \n        type=\"button\" \n        class=\"mdc-snackbar__action-button\">{{ actionText }}</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MDCSnackbarFoundation from '@material/snackbar/foundation'\nimport { getCorrectEventName } from '@material/animation'\n\nexport default {\n  name: 'mdc-snackbar',\n  model: {\n    prop: 'snack',\n    event: 'queued'\n  },\n  props: {\n    'align-start': Boolean,\n    snack: Object,\n    event: String,\n    'event-source': {\n      type: Object,\n      required: false,\n      default() {\n        return this.$root\n      }\n    },\n    'dismisses-on-action': {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-snackbar--align-start': this.alignStart\n      },\n      message: '',\n      actionText: '',\n      hidden: false,\n      actionHidden: false\n    }\n  },\n  watch: {\n    snack: 'onSnack'\n  },\n  mounted() {\n    this.foundation = new MDCSnackbarFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      setAriaHidden: () => (this.hidden = true),\n      unsetAriaHidden: () => (this.hidden = false),\n      setActionAriaHidden: () => (this.actionHidden = true),\n      unsetActionAriaHidden: () => (this.actionHidden = false),\n      setActionText: text => {\n        this.actionText = text\n      },\n      setMessageText: text => {\n        this.message = text\n      },\n      setFocus: () => this.$refs.button.focus(),\n      visibilityIsHidden: () => document.hidden,\n      registerCapturedBlurHandler: handler =>\n        this.$refs.button.addEventListener('blur', handler, true),\n      deregisterCapturedBlurHandler: handler =>\n        this.$refs.button.removeEventListener('blur', handler, true),\n      registerVisibilityChangeHandler: handler =>\n        document.addEventListener('visibilitychange', handler),\n      deregisterVisibilityChangeHandler: handler =>\n        document.removeEventListener('visibilitychange', handler),\n      registerCapturedInteractionHandler: (evt, handler) =>\n        document.body.addEventListener(evt, handler, true),\n      deregisterCapturedInteractionHandler: (evt, handler) =>\n        document.body.removeEventListener(evt, handler, true),\n      registerActionClickHandler: handler =>\n        this.$refs.button.addEventListener('click', handler),\n      deregisterActionClickHandler: handler =>\n        this.$refs.button.removeEventListener('click', handler),\n      registerTransitionEndHandler: handler => {\n        const root = this.$refs.root\n        root &&\n          root.addEventListener(\n            getCorrectEventName(window, 'transitionend'),\n            handler\n          )\n      },\n      deregisterTransitionEndHandler: handler => {\n        const root = this.$refs.root\n        root &&\n          root.removeEventListener(\n            getCorrectEventName(window, 'transitionend'),\n            handler\n          )\n      },\n      notifyShow: () => this.$emit('show'),\n      notifyHide: () => this.$emit('hide')\n    })\n    this.foundation.init()\n\n    // if event specified use it, else if no snack prop then use default.\n    this.eventName =\n      this.event || (this.snack === void 0 ? 'show-snackbar' : null)\n    if (this.eventName) {\n      this.eventSource.$on(this.eventName, this.show)\n    }\n    this.foundation.setDismissOnAction(this.dismissesOnAction)\n  },\n  beforeDestroy() {\n    if (this.eventSource) {\n      this.eventSource.$off(this.eventName, this.show)\n    }\n    this.foundation.destroy()\n  },\n  methods: {\n    onSnack(snack) {\n      if (snack && snack.message) {\n        this.foundation.show(snack)\n        this.$emit('queued', snack)\n      }\n    },\n    show(data) {\n      this.foundation.show(data)\n    }\n  }\n}\n</script>\n","export function autoInit(plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n","import './styles.scss'\nimport { autoInit } from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["MDCFoundation","adapter","adapter_","cssClasses","root","foundation","undefined","root_","args","initialize","foundation_","this","getDefaultFoundation","init","initialSyncWithDOM","MDCComponent","Error","destroy","evtType","handler","addEventListener","removeEventListener","evtData","shouldBubble","evt","CustomEvent","document","createEvent","initCustomEvent","dispatchEvent","strings","numbers","MDCSnackbarFoundation","babelHelpers.extends","defaultAdapter","active_","actionWasClicked_","dismissOnAction_","firstFocus_","pointerDownRecognized_","snackbarHasFocus_","snackbarData_","queue_","actionClickHandler_","invokeAction_","visibilitychangeHandler_","_this","timeoutId_","visibilityIsHidden","cleanup_","bind","timeout","MESSAGE_TIMEOUT","interactionHandler_","type","handlePossibleTabKeyboardFocus_","blurHandler_","setTimeout","registerActionClickHandler","setAriaHidden","setActionAriaHidden","deregisterActionClickHandler","deregisterCapturedBlurHandler","deregisterVisibilityChangeHandler","forEach","deregisterCapturedInteractionHandler","_this2","dismissOnAction","data","message","actionHandler","actionText","active","push","registerVisibilityChangeHandler","registerCapturedBlurHandler","registerCapturedInteractionHandler","_this3","ACTIVE","MULTILINE","ACTION_ON_BOTTOM","setMessageText","multiline","addClass","actionOnBottom","setActionText","actionHandler_","setActionHidden_","unsetAriaHidden","notifyShow","setFocusOnAction_","setFocus","removeClass","registerTransitionEndHandler","_this4","deregisterTransitionEndHandler","notifyHide","showNext_","length","show","shift","isHidden","unsetActionAriaHidden","eventTypeMap","cssPropertyMap","getAnimationName","windowObj","eventType","hasProperShape","eventFoundInMaps","map","el","styleProperty","style","noPrefix","webkitPrefix","getJavaScriptEventName","getCorrectEventName","components","render","Boolean","Object","String","$root","alignStart","$set","classes","className","$delete","hidden","actionHidden","text","$refs","button","focus","body","window","$emit","eventName","event","snack","eventSource","$on","setDismissOnAction","dismissesOnAction","$off","key","component","name","plugin","_Vue","Vue","global","use"],"mappings":"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"}