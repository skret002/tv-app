{"version":3,"file":"index.js","sources":["../components/base/base-plugin.js","../components/base/custom-event.js","../components/base/dispatch-event-mixin.js","../node_modules/@material/top-app-bar/constants.js","../node_modules/@material/top-app-bar/adapter.js","../node_modules/@material/base/foundation.js","../node_modules/@material/top-app-bar/foundation.js","../node_modules/@material/top-app-bar/short/foundation.js","../components/top-app-bar/mdc-top-app-bar.vue","../components/top-app-bar/mdc-top-app-bar-action.vue","../components/top-app-bar/index.js","../components/index.js"],"sourcesContent":["export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","export const DispatchEventMixin = {\n  props: {\n    event: String,\n    'event-target': Object,\n    'event-args': Array\n  },\n  methods: {\n    dispatchEvent(evt) {\n      evt && this.$emit(evt.type, evt)\n      if (this.event) {\n        let target = this.eventTarget || this.$root\n        let args = this.eventArgs || []\n        target.$emit(this.event, ...args)\n      }\n    }\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        click: e => this.dispatchEvent(e)\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  FIXED_CLASS: 'mdc-top-app-bar--fixed',\n  FIXED_SCROLLED_CLASS: 'mdc-top-app-bar--fixed-scrolled',\n  SHORT_CLASS: 'mdc-top-app-bar--short',\n  SHORT_HAS_ACTION_ITEM_CLASS: 'mdc-top-app-bar--short-has-action-item',\n  SHORT_COLLAPSED_CLASS: 'mdc-top-app-bar--short-collapsed',\n};\n\n/** @enum {number} */\nconst numbers = {\n  DEBOUNCE_THROTTLE_RESIZE_TIME_MS: 100,\n  MAX_TOP_APP_BAR_HEIGHT: 128,\n};\n\n/** @enum {string} */\nconst strings = {\n  ACTION_ITEM_SELECTOR: '.mdc-top-app-bar__action-item',\n  NAVIGATION_EVENT: 'MDCTopAppBar:nav',\n  NAVIGATION_ICON_SELECTOR: '.mdc-top-app-bar__navigation-icon',\n  ROOT_SELECTOR: '.mdc-top-app-bar',\n  TITLE_SELECTOR: '.mdc-top-app-bar__title',\n};\n\nexport {strings, cssClasses, numbers};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Top App Bar\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Top App Bar into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTopAppBarAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root Element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the specified inline style property on the root Element to the given value.\n   * @param {string} property\n   * @param {string} value\n   */\n  setStyle(property, value) {}\n\n  /**\n   * Gets the height of the top app bar.\n   * @return {number}\n   */\n  getTopAppBarHeight() {}\n\n  /**\n   * Registers an event handler on the navigation icon element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerNavigationIconInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the navigation icon element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterNavigationIconInteractionHandler(type, handler) {}\n\n  /**\n   * Emits an event when the navigation icon is clicked.\n   */\n  notifyNavigationIconClicked() {}\n\n  /** @param {function(!Event)} handler */\n  registerScrollHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterScrollHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  registerResizeHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterResizeHandler(handler) {}\n\n  /** @return {number} */\n  getViewportScrollY() {}\n\n  /** @return {number} */\n  getTotalActionItems() {}\n}\n\nexport default MDCTopAppBarAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {strings, cssClasses, numbers} from './constants';\nimport MDCTopAppBarAdapter from './adapter';\nimport MDCFoundation from '@material/base/foundation';\n\n/**\n * @extends {MDCFoundation<!MDCTopAppBarAdapter>}\n */\nclass MDCTopAppBarBaseFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * {@see MDCTopAppBarAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTopAppBarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTopAppBarAdapter} */ ({\n      hasClass: (/* className: string */) => {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setStyle: (/* property: string, value: string */) => {},\n      getTopAppBarHeight: () => {},\n      registerNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      notifyNavigationIconClicked: () => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getViewportScrollY: () => /* number */ 0,\n      getTotalActionItems: () => /* number */ 0,\n    });\n  }\n\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(/** @type {!MDCTopAppBarAdapter} */ adapter) {\n    super(Object.assign(MDCTopAppBarBaseFoundation.defaultAdapter, adapter));\n\n    this.navClickHandler_ = () => this.adapter_.notifyNavigationIconClicked();\n  }\n\n  init() {\n    this.adapter_.registerNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n}\n\nexport default MDCTopAppBarBaseFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarBaseFoundation from '../foundation';\nimport {cssClasses} from '../constants';\n\n/**\n * @extends {MDCTopAppBarBaseFoundation<!MDCShortTopAppBarFoundation>}\n * @final\n */\nclass MDCShortTopAppBarFoundation extends MDCTopAppBarBaseFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    // State variable for the current top app bar state\n    this.isCollapsed = false;\n\n    this.scrollHandler_ = () => this.shortAppBarScrollHandler_();\n  }\n\n  init() {\n    super.init();\n    const isAlwaysCollapsed = this.adapter_.hasClass(cssClasses.SHORT_COLLAPSED_CLASS);\n\n    if (this.adapter_.getTotalActionItems() > 0) {\n      this.adapter_.addClass(cssClasses.SHORT_HAS_ACTION_ITEM_CLASS);\n    }\n\n    if (!isAlwaysCollapsed) {\n      this.adapter_.registerScrollHandler(this.scrollHandler_);\n      this.shortAppBarScrollHandler_();\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n\n  /**\n   * Scroll handler for applying/removing the collapsed modifier class\n   * on the short top app bar.\n   * @private\n   */\n  shortAppBarScrollHandler_() {\n    const currentScroll = this.adapter_.getViewportScrollY();\n\n    if (currentScroll <= 0) {\n      if (this.isCollapsed) {\n        this.adapter_.removeClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = false;\n      }\n    } else {\n      if (!this.isCollapsed) {\n        this.adapter_.addClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = true;\n      }\n    }\n  }\n}\n\nexport default MDCShortTopAppBarFoundation;\n","<template>\n  <header\n    ref=\"root\"\n    :class=\"rootClasses\"\n    :style=\"rootStyles\"\n    v-on=\"$listeners\">\n    <div class=\"mdc-top-app-bar__row\">\n      <section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-start\">\n        <a\n          v-if=\"haveNavigationIcon\"\n          ref=\"navigationIcon\"\n          :class=\"naviconClasses\"\n          href=\"#\"\n          v-on=\"listeners\">{{ icon }}</a>\n        <span\n          v-if=\"!!title\"\n          class=\"mdc-top-app-bar__title\">{{ title }}</span>\n      </section>\n      <section\n        v-if=\"$slots.default\"\n        class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-end\">\n        <slot/>\n      </section>\n    </div>\n  </header>\n</template>\n\n<script>\nimport MDCTopAppBarFoundation from '@material/top-app-bar/foundation'\nimport MDCShortTopAppBarFoundation from '@material/top-app-bar/short/foundation'\nimport { DispatchEventMixin } from '../base'\n\nexport default {\n  name: 'mdc-top-app-bar',\n  mixins: [DispatchEventMixin],\n  props: {\n    short: Boolean,\n    shortCollapsed: Boolean,\n    prominent: Boolean,\n    fixed: Boolean,\n    title: String,\n    icon: {\n      type: String,\n      default: 'menu'\n    },\n    iconClasses: Object,\n    dense: Boolean\n  },\n  data() {\n    return {\n      rootStyles: {},\n      rootClasses: {\n        'mdc-top-app-bar': true,\n        'mdc-top-app-bar--dense': this.dense,\n        'mdc-top-app-bar--short': this.short,\n        'mdc-top-app-bar--short-collapsed': this.shortCollapsed,\n        'mdc-top-app-bar--prominent': this.prominent,\n        'mdc-top-app-bar--fixed': this.fixed\n      },\n      foundation: null\n    }\n  },\n  computed: {\n    haveNavigationIcon() {\n      return !!this.icon || this.iconClasses\n    },\n    naviconClasses() {\n      return {\n        'mdc-top-app-bar__navigation-icon': true,\n        'material-icons': !!this.icon,\n        ...this.iconClasses\n      }\n    }\n  },\n  mounted() {\n    const adapter = {\n      addClass: className => {\n        this.$set(this.rootClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.rootClasses, className)\n      },\n      hasClass: className => {\n        return this.$refs.root.classList.contains(className)\n      },\n      setStyle: (property, value) => {\n        this.$set(this.rootStyles, property, value)\n      },\n      getTopAppBarHeight: () => this.$el.clientHeight,\n      registerNavigationIconInteractionHandler: (type, handler) => {\n        if (this.$refs.navigationIcon) {\n          this.$refs.navigationIcon.addEventListener(type, handler)\n        }\n      },\n      deregisterNavigationIconInteractionHandler: (type, handler) => {\n        if (this.$refs.navigationIcon) {\n          this.$refs.navigationIcon.removeEventListener(type, handler)\n        }\n      },\n      notifyNavigationIconClicked: () => {\n        this.$emit('nav')\n      },\n      registerScrollHandler: handler => {\n        window.addEventListener('scroll', handler)\n      },\n      deregisterScrollHandler: handler => {\n        window.removeEventListener('scroll', handler)\n      },\n      registerResizeHandler: handler =>\n        window.addEventListener('resize', handler),\n      deregisterResizeHandler: handler =>\n        window.removeEventListener('resize', handler),\n\n      getViewportScrollY: () => {\n        return window.pageYOffset\n      },\n      getTotalActionItems: () =>\n        this.$refs.root.querySelectorAll(\n          MDCTopAppBarFoundation.strings.ACTION_ITEM_SELECTOR\n        ).length\n    }\n\n    this.foundation = this.short\n      ? new MDCShortTopAppBarFoundation(adapter)\n      : new MDCTopAppBarFoundation(adapter)\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","<template>\n  <a\n    :class=\"actioniconClasses\"\n    href=\"#\"\n    class=\"mdc-top-app-bar-action mdc-top-app-bar--action mdc-top-app-bar__action-item\"\n    v-on=\"listeners\">\n    <slot>{{ icon }}</slot>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base'\nimport { RippleMixin } from '../ripple'\n\nexport default {\n  name: 'mdc-top-app-bar-action',\n  mixins: [DispatchEventMixin, RippleMixin],\n  props: {\n    icon: String,\n    iconClasses: Object\n  },\n  computed: {\n    actioniconClasses() {\n      return {\n        'material-icons': !!this.icon,\n        ...this.iconClasses\n      }\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcTopAppBar from './mdc-top-app-bar.vue'\nimport mdcTopAppBarAction from './mdc-top-app-bar-action.vue'\n\nexport { mdcTopAppBar, mdcTopAppBarAction }\n\nexport default BasePlugin({\n  mdcTopAppBar,\n  mdcTopAppBarAction\n})\n","//\n// vue PlugIn\n//\nimport VueMDCButton from './button'\nimport VueMDCCard from './card'\nimport VueMDCCheckbox from './checkbox'\nimport VueMDCChipSet from './chips'\nimport VueMDCDialog from './dialog'\nimport VueMDCDrawer from './drawer'\nimport VueMDCElevation from './elevation'\nimport VueMDCFab from './fab'\nimport VueMDCGridList from './grid-list'\nimport VueMDCIcon from './icon'\nimport VueMDCIconToggle from './icon-toggle'\nimport VueMDCLayoutApp from './layout-app'\nimport VueMDCLayoutGrid from './layout-grid'\nimport VueMDCLinearProgress from './linear-progress'\nimport VueMDCList from './list'\nimport VueMDCMenu from './menu'\nimport VueMDCRadio from './radio'\nimport VueMDCRipple from './ripple'\nimport VueMDCSelect from './select'\nimport VueMDCSlider from './slider'\nimport VueMDCSnackbar from './snackbar'\nimport VueMDCSwitch from './switch'\nimport VueMDCTabs from './tabs'\nimport VueMDCTextfield from './textfield'\nimport VueMDCTheme from './theme'\nimport VueMDCToolbar from './toolbar'\nimport VueMDCTopAppBar from './top-app-bar'\nimport VueMDCTypography from './typography'\n\nexport default {\n  version: '__VERSION__',\n  install(vm) {\n    vm.use(VueMDCButton)\n    vm.use(VueMDCCard)\n    vm.use(VueMDCCheckbox)\n    vm.use(VueMDCChipSet)\n    vm.use(VueMDCDialog)\n    vm.use(VueMDCDrawer)\n    vm.use(VueMDCElevation)\n    vm.use(VueMDCFab)\n    vm.use(VueMDCGridList)\n    vm.use(VueMDCIcon)\n    vm.use(VueMDCIconToggle)\n    vm.use(VueMDCLayoutApp)\n    vm.use(VueMDCLayoutGrid)\n    vm.use(VueMDCLinearProgress)\n    vm.use(VueMDCList)\n    vm.use(VueMDCMenu)\n    vm.use(VueMDCRadio)\n    vm.use(VueMDCRipple)\n    vm.use(VueMDCSelect)\n    vm.use(VueMDCSlider)\n    vm.use(VueMDCSnackbar)\n    vm.use(VueMDCSwitch)\n    vm.use(VueMDCTabs)\n    vm.use(VueMDCTextfield)\n    vm.use(VueMDCTheme)\n    vm.use(VueMDCToolbar)\n    vm.use(VueMDCTopAppBar)\n    vm.use(VueMDCTypography)\n  }\n}\n"],"names":["BasePlugin","components","key","component","name","DispatchEventMixin","String","Object","Array","evt","$emit","type","event","target","eventTarget","$root","args","eventArgs","$listeners","dispatchEvent","e","cssClasses","numbers","strings","MDCTopAppBarAdapter","className","property","value","handler","MDCFoundation","adapter","adapter_","MDCTopAppBarBaseFoundation","babelHelpers.extends","defaultAdapter","navClickHandler_","notifyNavigationIconClicked","registerNavigationIconInteractionHandler","deregisterNavigationIconInteractionHandler","MDCShortTopAppBarFoundation","isCollapsed","scrollHandler_","shortAppBarScrollHandler_","isAlwaysCollapsed","hasClass","SHORT_COLLAPSED_CLASS","getTotalActionItems","addClass","SHORT_HAS_ACTION_ITEM_CLASS","registerScrollHandler","deregisterScrollHandler","currentScroll","getViewportScrollY","removeClass","render","Boolean","dense","short","shortCollapsed","prominent","fixed","icon","iconClasses","$set","rootClasses","$delete","$refs","root","classList","contains","rootStyles","$el","clientHeight","navigationIcon","addEventListener","removeEventListener","window","pageYOffset","querySelectorAll","MDCTopAppBarFoundation","ACTION_ITEM_SELECTOR","length","foundation","init","destroy","RippleMixin","vm","use","VueMDCButton","VueMDCCard","VueMDCCheckbox","VueMDCChipSet","VueMDCDialog","VueMDCDrawer","VueMDCElevation","VueMDCFab","VueMDCGridList","VueMDCIcon","VueMDCIconToggle","VueMDCLayoutApp","VueMDCLayoutGrid","VueMDCLinearProgress","VueMDCList","VueMDCMenu","VueMDCRadio","VueMDCRipple","VueMDCSelect","VueMDCSlider","VueMDCSnackbar","VueMDCSwitch","VueMDCTabs","VueMDCTextfield","VueMDCTheme","VueMDCToolbar","VueMDCTopAppBar","VueMDCTypography"],"mappings":"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"}